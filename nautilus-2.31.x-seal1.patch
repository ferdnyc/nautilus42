From a09d41702b771fb0041fa0c4270afaa678413a2d Mon Sep 17 00:00:00 2001
From: Cosimo Cecchi <cosimoc@gnome.org>
Date: Tue, 13 Apr 2010 12:52:22 +0000
Subject: Remove deprecated GTK+ symbols (#565038).

---
diff --git a/eel/eel-background.c b/eel/eel-background.c
index d0782d7..2edbc31 100644
--- a/eel/eel-background.c
+++ b/eel/eel-background.c
@@ -750,7 +750,7 @@ eel_background_set_up_widget (EelBackground *background, GtkWidget *widget)
 	GdkWindow *window;
 	gboolean in_fade;
 
-	if (!GTK_WIDGET_REALIZED (widget)) {
+	if (!gtk_widget_get_realized (widget)) {
 		return;
 	}
 
@@ -814,7 +814,7 @@ on_background_changed (EelBackground *background)
 static void
 init_fade (EelBackground *background, GtkWidget *widget)
 {
-	if (widget == NULL || !GTK_WIDGET_REALIZED (widget))
+	if (widget == NULL || !gtk_widget_get_realized (widget))
 		return;
 
 	if (!background->details->is_desktop) {
@@ -966,7 +966,7 @@ eel_background_set_desktop (EelBackground *background, GtkWidget *widget, gboole
 {
 	background->details->is_desktop = is_desktop;
 
-	if (GTK_WIDGET_REALIZED(widget) && background->details->is_desktop) {
+	if (gtk_widget_get_realized (widget) && background->details->is_desktop) {
 		widget_realized_setup (widget, background);
 	}
 	
diff --git a/eel/eel-canvas.c b/eel/eel-canvas.c
index ac7f562..3778b68 100644
--- a/eel/eel-canvas.c
+++ b/eel/eel-canvas.c
@@ -347,7 +347,7 @@ eel_canvas_item_realize (EelCanvasItem *item)
 	if (item->parent && !(item->parent->object.flags & EEL_CANVAS_ITEM_REALIZED))
 		(* EEL_CANVAS_ITEM_GET_CLASS (item->parent)->realize) (item->parent);
 	
-	if (item->parent == NULL && !GTK_WIDGET_REALIZED (GTK_WIDGET (item->canvas)))
+	if (item->parent == NULL && !gtk_widget_get_realized (GTK_WIDGET (item->canvas)))
 		gtk_widget_realize (GTK_WIDGET (item->canvas));
 	
 	GTK_OBJECT_SET_FLAGS (item, EEL_CANVAS_ITEM_REALIZED);
@@ -779,7 +779,7 @@ eel_canvas_item_show (EelCanvasItem *item)
 				(* EEL_CANVAS_ITEM_GET_CLASS (item)->map) (item);
 		} else {
 			if (!(item->object.flags & EEL_CANVAS_ITEM_MAPPED) &&
-			    GTK_WIDGET_MAPPED (GTK_WIDGET (item->canvas)))
+			    gtk_widget_get_mapped (GTK_WIDGET (item->canvas)))
 				(* EEL_CANVAS_ITEM_GET_CLASS (item)->map) (item);
 		}
 
@@ -837,7 +837,8 @@ eel_canvas_item_grab (EelCanvasItem *item, guint event_mask, GdkCursor *cursor,
 	int retval;
 
 	g_return_val_if_fail (EEL_IS_CANVAS_ITEM (item), GDK_GRAB_NOT_VIEWABLE);
-	g_return_val_if_fail (GTK_WIDGET_MAPPED (item->canvas), GDK_GRAB_NOT_VIEWABLE);
+	g_return_val_if_fail (gtk_widget_get_mapped (GTK_WIDGET (item->canvas)),
+			      GDK_GRAB_NOT_VIEWABLE);
 
 	if (item->canvas->grabbed_item)
 		return GDK_GRAB_ALREADY_GRABBED;
@@ -1009,7 +1010,7 @@ eel_canvas_item_grab_focus (EelCanvasItem *item)
 	GdkEvent ev;
 
 	g_return_if_fail (EEL_IS_CANVAS_ITEM (item));
-	g_return_if_fail (GTK_WIDGET_CAN_FOCUS (GTK_WIDGET (item->canvas)));
+	g_return_if_fail (gtk_widget_get_can_focus (GTK_WIDGET (item->canvas)));
 
 	focused_item = item->canvas->focused_item;
 
@@ -2424,7 +2425,7 @@ emit_event (EelCanvas *canvas, GdkEvent *event)
 	guint mask;
 
 	/* Could be an old pick event */
-	if (!GTK_WIDGET_REALIZED (canvas)) {
+	if (!gtk_widget_get_realized (GTK_WIDGET (canvas))) {
 		return FALSE;
 	}
 
@@ -2860,7 +2861,7 @@ eel_canvas_expose (GtkWidget *widget, GdkEventExpose *event)
 
 	canvas = EEL_CANVAS (widget);
 
-	if (!GTK_WIDGET_DRAWABLE (widget) || (event->window != canvas->layout.bin_window)) return FALSE;
+	if (!gtk_widget_is_drawable (widget) || (event->window != canvas->layout.bin_window)) return FALSE;
 
 #ifdef VERBOSE
 	g_print ("Expose\n");
@@ -3148,7 +3149,7 @@ eel_canvas_set_pixels_per_unit (EelCanvas *canvas, double n)
 	 * scrolling the window scroll causing exposes.
 	 */
 	window = NULL;
-	if (GTK_WIDGET_MAPPED (widget)) {
+	if (gtk_widget_get_mapped (widget)) {
 		attributes.window_type = GDK_WINDOW_CHILD;
 		attributes.x = widget->allocation.x;
 		attributes.y = widget->allocation.y;
@@ -3310,7 +3311,8 @@ eel_canvas_request_redraw (EelCanvas *canvas, int x1, int y1, int x2, int y2)
 
 	g_return_if_fail (EEL_IS_CANVAS (canvas));
 
-	if (!GTK_WIDGET_DRAWABLE (canvas) || (x1 >= x2) || (y1 >= y2)) return;
+	if (!gtk_widget_is_drawable (GTK_WIDGET (canvas))
+	    || (x1 >= x2) || (y1 >= y2)) return;
 
 	bbox.x = x1;
 	bbox.y = y1;
@@ -3754,7 +3756,7 @@ eel_canvas_item_accessible_grab_focus (AtkComponent *component)
 
         eel_canvas_item_grab_focus (item);
 	toplevel = gtk_widget_get_toplevel (GTK_WIDGET (item->canvas));
-	if (GTK_WIDGET_TOPLEVEL (toplevel)) {
+	if (gtk_widget_is_toplevel (toplevel)) {
 		gtk_window_present (GTK_WINDOW (toplevel));
 	}
 
@@ -3821,7 +3823,7 @@ eel_canvas_item_accessible_ref_state_set (AtkObject *accessible)
   				atk_state_set_add_state (state_set, ATK_STATE_SHOWING);
        			}
 		}
-        	if (GTK_WIDGET_CAN_FOCUS (GTK_WIDGET (item->canvas))) {
+        	if (gtk_widget_get_can_focus (GTK_WIDGET (item->canvas))) {
 			atk_state_set_add_state (state_set, ATK_STATE_FOCUSABLE);
 
 			if (item->canvas->focused_item == item) {
diff --git a/eel/eel-debug-drawing.c b/eel/eel-debug-drawing.c
index 7132417..8aeb4b9 100644
--- a/eel/eel-debug-drawing.c
+++ b/eel/eel-debug-drawing.c
@@ -148,7 +148,7 @@ debug_pixbuf_viewer_expose_event (GtkWidget *widget, GdkEventExpose *event)
 	g_assert (DEBUG_IS_PIXBUF_VIEWER (widget));
 	g_assert (event != NULL);
 	g_assert (event->window == widget->window);
-	g_assert (GTK_WIDGET_REALIZED (widget));
+	g_assert (gtk_widget_get_realized (widget));
 	
  	viewer = DEBUG_PIXBUF_VIEWER (widget);
 
diff --git a/eel/eel-editable-label.c b/eel/eel-editable-label.c
index 51ec872..31c45ad 100644
--- a/eel/eel-editable-label.c
+++ b/eel/eel-editable-label.c
@@ -1171,7 +1171,7 @@ eel_editable_label_style_set (GtkWidget *widget,
   /* Set the background, foreground and cursor colors based on 
    * the new theme selected.
    */
-  if (GTK_WIDGET_REALIZED (widget))
+  if (gtk_widget_get_realized (widget))
     {
 	gdk_window_set_background (widget->window, &widget->style->base[gtk_widget_get_state (widget)]);
 
@@ -1485,7 +1485,7 @@ _eel_draw_insertion_cursor (GtkWidget        *widget,
 static void
 eel_editable_label_draw_cursor (EelEditableLabel  *label, gint xoffset, gint yoffset)
 {
-  if (GTK_WIDGET_DRAWABLE (label))
+  if (gtk_widget_is_drawable (GTK_WIDGET (label)))
     {
       GtkWidget *widget = GTK_WIDGET (label);
 
@@ -1618,7 +1618,7 @@ eel_editable_label_expose (GtkWidget      *widget,
 
   eel_editable_label_ensure_layout (label, TRUE);
   
-  if (GTK_WIDGET_VISIBLE (widget) && GTK_WIDGET_MAPPED (widget) &&
+  if (gtk_widget_get_visible (widget) && gtk_widget_get_mapped (widget) &&
       label->text)
     {
       get_layout_location (label, &x, &y);
@@ -1671,7 +1671,7 @@ eel_editable_label_expose (GtkWidget      *widget,
 
 
 	  state = GTK_STATE_SELECTED;
-	  if (!GTK_WIDGET_HAS_FOCUS (widget))
+	  if (!gtk_widget_has_focus (widget))
 	    state = GTK_STATE_ACTIVE;
 	      
           gdk_draw_layout_with_colors (widget->window,
@@ -1684,7 +1684,7 @@ eel_editable_label_expose (GtkWidget      *widget,
           gdk_gc_set_clip_region (widget->style->black_gc, NULL);
           gdk_region_destroy (clip);
         }
-      else if (GTK_WIDGET_HAS_FOCUS (widget))
+      else if (gtk_widget_has_focus (widget))
 	eel_editable_label_draw_cursor (label, x, y);
 
       if (label->draw_outline)
@@ -1876,7 +1876,7 @@ eel_editable_label_button_press (GtkWidget      *widget,
 
   if (event->button == 1)
     {
-      if (!GTK_WIDGET_HAS_FOCUS (widget))
+      if (!gtk_widget_has_focus (widget))
 	gtk_widget_grab_focus (widget);
 
       if (event->type == GDK_3BUTTON_PRESS)
@@ -3110,7 +3110,7 @@ popup_position_func (GtkMenu   *menu,
   label = EEL_EDITABLE_LABEL (user_data);  
   widget = GTK_WIDGET (label);
 
-  g_assert (GTK_WIDGET_REALIZED (label));
+  g_assert (gtk_widget_get_realized (widget));
 
   gdk_window_get_origin (widget->window, x, y);      
 
@@ -3152,7 +3152,7 @@ popup_targets_received (GtkClipboard     *clipboard,
   info = user_data;
   label = info->label;
 
-  if (GTK_WIDGET_REALIZED (label))
+  if (gtk_widget_get_realized (GTK_WIDGET (label)))
     {
       if (label->popup_menu)
 	gtk_widget_destroy (label->popup_menu);
diff --git a/eel/eel-gtk-container.c b/eel/eel-gtk-container.c
index 247d7eb..08056d9 100644
--- a/eel/eel-gtk-container.c
+++ b/eel/eel-gtk-container.c
@@ -77,7 +77,7 @@ eel_gtk_container_child_map (GtkContainer *container,
 
 	g_return_if_fail (child->parent == GTK_WIDGET (container));
 
-	if (GTK_WIDGET_VISIBLE (child) && !GTK_WIDGET_MAPPED (child)) {
+	if (gtk_widget_get_visible (child) && !gtk_widget_get_mapped (child)) {
 		gtk_widget_map (child);
 	}
 }
@@ -103,7 +103,7 @@ eel_gtk_container_child_unmap (GtkContainer *container,
 
 	g_return_if_fail (child->parent == GTK_WIDGET (container));
 	
-	if (GTK_WIDGET_VISIBLE (child) && GTK_WIDGET_MAPPED (child)) {
+	if (gtk_widget_get_visible (child) && gtk_widget_get_mapped (child)) {
 		gtk_widget_unmap (child);
 	}
 }
@@ -122,17 +122,22 @@ void
 eel_gtk_container_child_add (GtkContainer *container,
 			     GtkWidget *child)
 {
+	GtkWidget *widget;
+
 	g_return_if_fail (GTK_IS_CONTAINER (container));
 	g_return_if_fail (GTK_IS_WIDGET (child));
+
+	widget = GTK_WIDGET (container);
 	
-	gtk_widget_set_parent (child, GTK_WIDGET (container));
+	gtk_widget_set_parent (child, widget);
 
-	if (GTK_WIDGET_REALIZED (container)) {
+	if (gtk_widget_get_realized (widget)) {
 		gtk_widget_realize (child);
 	}
 	
-	if (GTK_WIDGET_VISIBLE (container) && GTK_WIDGET_VISIBLE (child)) {
-		if (GTK_WIDGET_MAPPED (container)) {
+	if (gtk_widget_get_mapped (widget)
+	    && gtk_widget_get_visible (child)) {
+		if (gtk_widget_get_mapped (widget)) {
 			gtk_widget_map (child);
 		}
 		
@@ -160,7 +165,7 @@ eel_gtk_container_child_remove (GtkContainer *container,
 	g_return_if_fail (GTK_IS_WIDGET (child));
 	g_return_if_fail (child->parent == GTK_WIDGET (container));
 	
-	child_was_visible = GTK_WIDGET_VISIBLE (child);
+	child_was_visible = gtk_widget_get_visible (child);
 	
 	gtk_widget_unparent (child);
 
diff --git a/eel/eel-gtk-extensions.c b/eel/eel-gtk-extensions.c
index 6f88f72..1bf5800 100644
--- a/eel/eel-gtk-extensions.c
+++ b/eel/eel-gtk-extensions.c
@@ -253,7 +253,7 @@ eel_gtk_window_set_initial_geometry (GtkWindow *window,
 	 * Someday we could make this move an already-showing window, but we don't
 	 * need that functionality yet. 
 	 */
-	g_return_if_fail (!GTK_WIDGET_VISIBLE (window));
+	g_return_if_fail (!gtk_widget_get_visible (GTK_WIDGET (window)));
 
 	if ((geometry_flags & EEL_GDK_X_VALUE) && (geometry_flags & EEL_GDK_Y_VALUE)) {
 		real_left = left;
@@ -321,7 +321,7 @@ eel_gtk_window_set_initial_geometry_from_string (GtkWindow *window,
 	 * Someday we could make this move an already-showing window, but we don't
 	 * need that functionality yet. 
 	 */
-	g_return_if_fail (!GTK_WIDGET_VISIBLE (window));
+	g_return_if_fail (!gtk_widget_get_visible (GTK_WIDGET (window)));
 
 	geometry_flags = eel_gdk_parse_geometry (geometry_string, &left, &top, &width, &height);
 
@@ -640,7 +640,7 @@ eel_gtk_signal_connect_while_realized (GtkObject *object,
 	g_return_if_fail (name[0] != '\0');
 	g_return_if_fail (callback != NULL);
 	g_return_if_fail (GTK_IS_WIDGET (realized_widget));
-	g_return_if_fail (GTK_WIDGET_REALIZED (realized_widget));
+	g_return_if_fail (gtk_widget_get_realized (realized_widget));
 
 	info = g_new0 (RealizeDisconnectInfo, 1);
 	
@@ -986,7 +986,7 @@ eel_gtk_widget_find_windowed_ancestor (GtkWidget *widget)
 {
 	g_return_val_if_fail (GTK_IS_WIDGET (widget), NULL);
 
-	while (widget && GTK_WIDGET_NO_WINDOW (widget)) {
+	while (widget && !gtk_widget_get_has_window (widget)) {
 		widget = widget->parent;
 	}
 
@@ -1109,7 +1109,7 @@ eel_gtk_viewport_get_visible_rect (GtkViewport  *viewport,
 	g_return_val_if_fail (GTK_IS_VIEWPORT (viewport), FALSE);
 	g_return_val_if_fail (rect != NULL, FALSE);
 	
-	if (GTK_WIDGET_REALIZED (viewport)) {
+	if (gtk_widget_get_realized (GTK_WIDGET (viewport))) {
 		viewport_rect.x = 0;
 		viewport_rect.y = 0;
 		gdk_drawable_get_size (viewport->view_window, 
diff --git a/eel/eel-image-table.c b/eel/eel-image-table.c
index f13f3d9..e781652 100644
--- a/eel/eel-image-table.c
+++ b/eel/eel-image-table.c
@@ -343,7 +343,7 @@ image_table_handle_motion (EelImageTable *image_table,
 
 	child = eel_wrap_table_find_child_at_event_point (EEL_WRAP_TABLE (image_table), x, y);
 
-	if (child && !GTK_WIDGET_SENSITIVE (child)) {
+	if (child && !gtk_widget_get_sensitive (child)) {
 		return;
 	}
 
@@ -458,7 +458,7 @@ ancestor_button_press_event (GtkWidget *widget,
 
 	child = eel_wrap_table_find_child_at_event_point (EEL_WRAP_TABLE (image_table), event->x, event->y);
 
-	if (child && !GTK_WIDGET_SENSITIVE (child)) {
+	if (child && !gtk_widget_get_sensitive (child)) {
 		return FALSE;
 	}
 
@@ -497,7 +497,7 @@ ancestor_button_release_event (GtkWidget *widget,
 
 	child = eel_wrap_table_find_child_at_event_point (EEL_WRAP_TABLE (image_table), event->x, event->y);
 
-	if (child && !GTK_WIDGET_SENSITIVE (child)) {
+	if (child && !gtk_widget_get_sensitive (child)) {
 		return FALSE;
 	}
 
diff --git a/eel/eel-labeled-image.c b/eel/eel-labeled-image.c
index b3ea349..89e64bb 100644
--- a/eel/eel-labeled-image.c
+++ b/eel/eel-labeled-image.c
@@ -535,7 +535,7 @@ eel_labeled_image_expose_event (GtkWidget *widget,
 	EelIRect label_bounds;
 
 	g_assert (EEL_IS_LABELED_IMAGE (widget));
-	g_assert (GTK_WIDGET_REALIZED (widget));
+	g_assert (gtk_widget_get_realized (widget));
 	g_assert (event != NULL);
 
   	labeled_image = EEL_LABELED_IMAGE (widget);
@@ -568,7 +568,7 @@ eel_labeled_image_expose_event (GtkWidget *widget,
 						      event);
 	}
 
-	if (GTK_WIDGET_HAS_FOCUS (widget)) {
+	if (gtk_widget_has_focus (widget)) {
 		label_bounds = eel_labeled_image_get_image_bounds (EEL_LABELED_IMAGE (widget));
 		gtk_paint_focus (widget->style, widget->window,
 				 GTK_STATE_NORMAL,
@@ -1923,7 +1923,7 @@ button_leave_callback (GtkWidget *widget,
 {
 	g_assert (GTK_IS_WIDGET (widget));
 
-	if (GTK_WIDGET_DRAWABLE (widget)) {
+	if (gtk_widget_is_drawable (widget)) {
 		const int fudge = 4;
 		EelIRect bounds;
 
diff --git a/eel/eel-wrap-table.c b/eel/eel-wrap-table.c
index 2ff81ae..4570428 100644
--- a/eel/eel-wrap-table.c
+++ b/eel/eel-wrap-table.c
@@ -320,7 +320,7 @@ eel_wrap_table_expose_event (GtkWidget *widget,
 	GList *iterator;
 	
 	g_assert (EEL_IS_WRAP_TABLE (widget));
-	g_assert (GTK_WIDGET_REALIZED (widget));
+	g_assert (gtk_widget_get_realized (widget));
 	g_assert (event != NULL);
 
   	wrap_table = EEL_WRAP_TABLE (widget);
@@ -352,7 +352,7 @@ eel_wrap_table_map (GtkWidget *widget)
 
 		item = iterator->data;
 
-		if (GTK_WIDGET_VISIBLE (item) && !GTK_WIDGET_MAPPED (item)) {
+		if (gtk_widget_get_visible (item) && !gtk_widget_get_mapped (item)) {
 			gtk_widget_map (item);
 		}
 	}
@@ -375,7 +375,7 @@ eel_wrap_table_unmap (GtkWidget *widget)
 
 		item = iterator->data;
 
-		if (GTK_WIDGET_VISIBLE (item) && GTK_WIDGET_MAPPED (item)) {
+		if (gtk_widget_get_visible (item) && gtk_widget_get_mapped (item)) {
 			gtk_widget_unmap (item);
 		}
 	}
@@ -397,23 +397,25 @@ eel_wrap_table_add (GtkContainer *container,
 			GtkWidget *child)
 {
 	EelWrapTable *wrap_table;
+	GtkWidget *widget;
 
 	g_assert (container != NULL);
 	g_assert (EEL_IS_WRAP_TABLE (container));
 	g_assert (GTK_IS_WIDGET (child));
 
+	widget = GTK_WIDGET (container);
 	wrap_table = EEL_WRAP_TABLE (container);
 
 	gtk_widget_set_parent (child, GTK_WIDGET (container));
 
 	wrap_table->details->children = g_list_append (wrap_table->details->children, child);
 
-	if (GTK_WIDGET_REALIZED (container)) {
+	if (gtk_widget_get_realized (widget)) {
 		gtk_widget_realize (child);
 	}
 
-	if (GTK_WIDGET_VISIBLE (container) && GTK_WIDGET_VISIBLE (child)) {
-		if (GTK_WIDGET_MAPPED (container)) {
+	if (gtk_widget_get_visible (widget) && gtk_widget_get_visible (child)) {
+		if (gtk_widget_get_mapped (widget)) {
 			gtk_widget_map (child);
 		}
 		
@@ -439,7 +441,7 @@ eel_wrap_table_remove (GtkContainer *container,
 	
 	wrap_table = EEL_WRAP_TABLE (container);;
 
-	child_was_visible = GTK_WIDGET_VISIBLE (child);
+	child_was_visible = gtk_widget_get_visible (child);
 	gtk_widget_unparent (child);
 	wrap_table->details->children = g_list_remove (wrap_table->details->children, child);
 
@@ -533,7 +535,7 @@ wrap_table_layout (EelWrapTable *wrap_table)
 
 		item = iterator->data;
 		
-		if (GTK_WIDGET_VISIBLE (item)) {
+		if (gtk_widget_get_visible (item)) {
 			GtkAllocation item_allocation;
 
 			if (wrap_table->details->homogeneous) {
@@ -630,7 +632,7 @@ wrap_table_get_max_child_dimensions (const EelWrapTable *wrap_table)
 		
 		child = iterator->data;
 		
-		if (GTK_WIDGET_VISIBLE (child)) {
+		if (gtk_widget_get_visible (child)) {
  			GtkRequisition child_requisition;
 			EelDimensions child_dimensions;
 
@@ -831,7 +833,7 @@ eel_wrap_table_find_child_at_event_point (const EelWrapTable *wrap_table,
 		
 		child = iterator->data;
 		
-		if (GTK_WIDGET_VISIBLE (child)) {
+		if (gtk_widget_get_visible (child)) {
 			EelIRect child_bounds;
 
 			child_bounds = eel_gtk_widget_get_bounds (child);
--
cgit v0.8.3.1
